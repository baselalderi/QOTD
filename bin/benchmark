#!/usr/bin/env ruby

require "benchmark"
require "bundler/setup"
require "qotd"
require "qotd/client"

NUM_CLIENTS  = 100
NUM_REQUESTS = 10

begin
  config          = Qotd::CONFIG.dup
  config.strategy = Qotd::Strategy::Serial
  config.verbose  = true
  queue           = Queue.new

  server = fork do
    Qotd.start(config: config)
  end

  Benchmark.bmbm do |bm|
    bm.report("serial") do
      (1..NUM_CLIENTS).map do |n|
        Thread.new do
          Qotd::Client.make_requests(
            config: config,
            request: "GET quote linus\r\n",
            num_requests: NUM_REQUESTS
          ) { |response| queue.push(response) }
        end
      end.each(&:join)
    end
  end
ensure
  Process.kill(:INT, server)
end

$serial = Hash.new(0)
while !queue.empty? do
  v = queue.pop
  $serial.store(v, $serial[v]+1)
end

begin
  config          = Qotd::CONFIG.dup
  config.strategy = Qotd::Strategy::Prefork
  config.verbose  = true
  queue           = Queue.new

  config.num_processes = 4

  server = fork do
    Qotd.start(config: config)
  end

  Benchmark.bmbm do |bm|
    bm.report("serial") do
      (1..NUM_CLIENTS).map do |n|
        Thread.new do
          Qotd::Client.make_requests(
            config: config,
            request: "GET quote linus\r\n",
            num_requests: NUM_REQUESTS
          ) { |response| queue.push(response) }
        end
      end.each(&:join)
    end
  end
ensure
  Process.kill(:INT, server)
end

$prefork = Hash.new(0)
while !queue.empty? do
  v = queue.pop
  $prefork.store(v, $prefork[v]+1)
end

require "irb"
IRB.start
